# -*- coding: utf-8 -*-

class LogHorizon < DiceBot
  
  def initialize
    super
    @d66Type = 1;
  end
  
  def prefixs
    ['\d+LH.*', 'PC.*', 'EC.*', 'GC.*', 'CC.*', 'CTR.*', 'MTR.*', 'ITR.*', 'HTR.*','GTR.*', 'PTAG', 'KOYU', 'MGR.', 'HLOC', 'PCNM', 'IAT.*', 'TIAS', 'ABDC', 'MII.*', 'ESCT.*', 'CSCT.*', 'ESTL.*']
  end
  
  def gameName
    'ログ・ホライズン'
  end
  
  def gameType
    "LogHorizon"
  end
  
  def getHelpMessage
    return <<MESSAGETEXT
・判定(xLH±y>=z)
　xD6の判定。クリティカル、ファンブルの自動判定を行います。
　x：xに振るダイス数を入力。
　±y：yに修正値を入力。±の計算に対応。省略可能。
  >=z：zに目標値を入力。±の計算に対応。省略可能。
　例） 3LH　2LH>=8　3LH+1>=10
・消耗表(tCTx±y$z)
　PCT 体力／ECT 気力／GCT 物品／CCT 金銭
　x:CRを指定。
　±y:修正値。＋と－の計算に対応。省略可能。
　$z：＄を付けるとダイス目を z 固定。表の特定の値参照用に。省略可能。
　例） PCT1　ECT2+1　GCT3-1　CCT3$5
・財宝表(tTRSx±y$)
　CTRS 金銭／MTRS 魔法素材／ITRS 換金アイテム／※HTRS ヒロイン／GTRS ゴブリン財宝表
　x：CRを指定。省略時はダイス値 0 固定で修正値の表参照。《ゴールドフィンガー》使用時など。
　±y：修正値。＋と－の計算に対応。省略可能。
　$：＄を付けると財宝表のダイス目を7固定（1回分のプライズ用）。省略可能。
　例） CTRS1　MTRS2+1　ITRS3-1　ITRS+27　CTRS3$
・パーソナリティタグ表(PTAG)
・交友表(KOYU)
・イースタル探索表(ESTLx) xはCRを指定
・プレフィックスドマジックアイテム効果表(MGRx) xはMGを指定。
†楽器種別表(MIIx) xは楽器の種類(1～6を指定)、省略可能
　1 打楽器１／2 鍵盤楽器／3 弦楽器１／4 弦楽器２／5 管楽器１／6 管楽器２
☆特殊消耗表(tSCTx±y$z)　消耗表と同様、ただしCRは省略可能。
　ESCT ロデ研は爆発だ！／CSCT アルヴの呪いじゃ！
※攻撃命中箇所ランダム決定表(HLOC)
※PC名ランダム決定表(PCNM)
※ロデ研の新発明ランダム決定表(IATt)
  IATA 特徴A(メリット)／IATB 特徴B(デメリット)／IATL 見た目／IATT 種類
  tを省略すると全て表示。tにA/B/L/Tを任意の順で連結可能
  例）IAT　IATALT  IATABBLT  IATABL
※アキバの街で遭遇するトラブルランダム決定表(TIAS)
※廃棄児ランダム決定表(ABDC)
†印は☆印は「イントゥ・ザ・セルデシア さらなるビルドの羽ばたき（１）」より、
☆印はセルデシア・ガゼット「できるかな66」Vol.1より、
※印は「実録・七面体工房スタッフ座談会(夏の陣)」より。利用法などはそちら参照。
・D66ダイスあり
MESSAGETEXT
  end
  
  
  def rollDiceCommand(command)
    
    # get～DiceCommandResultという名前のメソッドを集めて実行、
    # 結果がnil以外の場合それを返して終了。
    
    methodList = public_methods(false).select do |method|
      method.to_s =~ /\Aget.+DiceCommandResult\z/
    end
    
    methodList.each do |method|
      result = send(method, command)
      return result unless result.nil?
    end
    
    return nil
  end
  
  
  def getCheckRollDiceCommandResult(command)
    
    return nil unless(/(\d+)LH([\+\-\d]*)(>=([\+\-\d]*))?/i === command)
    
    diceCount = $1.to_i
    modifyText = ($2 || '')
    difficultyText = $4
    
	#修正値の計算
	modify = getValue( modifyText, 0 )
    
	#目標値の計算
    difficulty = getValue( difficultyText, nil )
	
	#ダイスロール
	dice, dice_str = roll(diceCount, 6)
    diceList = dice_str.split(/,/).collect{|i|i.to_i}.sort
    
	total = dice + modify
	
	#出力用ダイスコマンドを生成
	command =  "#{diceCount}LH#{modifyText}"
	command += ">=#{difficulty}" unless(difficulty.nil?)
	
    
	#出力文の生成
	result = "(#{command}) ＞ #{dice}[#{dice_str}]#{modifyText} ＞ #{total}"
    
    
	#クリティカル・ファンブルチェック
    if( isCritical(diceList) )
      result += " ＞ クリティカル！"
    elsif( isFamble(diceList, diceCount) )
      result += " ＞ ファンブル！"
    else
      result += getJudgeResultString(difficulty, total)
    end
    
    return result
    
  end
  
  
  #成否判定
  def getJudgeResultString(difficulty, total)
    return '' if(difficulty.nil?)
    
    if(total >= difficulty)
      return " ＞ 成功"
    else
      return " ＞ 失敗"
    end
  end
  
  
  def getValue(text, defaultValue)
    return defaultValue if( text == nil or text.empty? ) 
    
    parren_killer("(0" + text + ")").to_i 
  end
  
  
  def isCritical(diceList)
	(diceList.select{|i| i == 6 }.size >= 2)
  end
  
  def isFamble(diceList, diceCount)
    (diceList.select{|i| i == 1 }.size >= diceCount)
  end
  
  
  #消耗表
  def getConsumptionDiceCommandResult( command )
    
    return nil unless(/(P|E|G|C|ES|CS)CT(\d+)?([\+\-\d]*)(\$(\d+))?/ === command)
    
    type = $1
    is_special = ($1 && $1.length > 1)
    rank = ($2 && $2 != '') ? $2.to_i : nil
    return nil if !rank && !is_special
    
    rank = 0 if !rank
    is_choice = (not $4.nil?)
    dice_value = $5
    modifyText = $3
    modify  = getValue(modifyText, 0)
    
    tableName = ""
    tables = nil
    
    case type
    when "P"
      tableName, tables = getPhysicalConsumptionResultTables
    when "E"
      tableName, tables = getEnergyConsumptionResultTables
    when "G"
      tableName, tables = getGoodsConsumptionResultTables
    when "C"
      tableName, tables = getCashConsumptionResultTables
    when "ES"
      tableName, tables = getExplosionSpecialConsumptionResultTables
    when "CS"
      tableName, tables = getCurseSpecialConsumptionResultTables
    else
      return nil
    end
    
    table = getTableByRank(rank, tables)
    
    number, dice_str = is_choice ? [dice_value.to_i, dice_value] : roll(1, 6)
    number += modify
    
    adjustedNumber = getAdjustNumber(number, table)
    
    result = get_table_by_number(adjustedNumber, table)
	
    text = "#{tableName}(#{number}[#{dice_str}])：#{result}"
    
    return text
  end
  
  
  def getPhysicalConsumptionResultTables()
    tableName = "体力消耗表"
    tables = [[
               [0, '消耗なし'],
               [1, '[疲労:5]を受ける'],
               [2, '[疲労:8]を受ける'],
               [3, '[疲労:10]を受ける'],
               [4, '[疲労:13]を受ける'],
               [5, '[疲労:15]を受ける'],
               [6, '[疲労:18]を受ける'],
               [7, '[疲労:20]を受ける'],
              ],
              [
               [0, '消耗なし'],
               [1, '[疲労:10]を受ける'],
               [2, '[疲労:15]を受ける'],
               [3, '[疲労:20]を受ける'],
               [4, '[疲労:25]を受ける'],
               [5, '[疲労:30]を受ける'],
               [6, '[疲労:35]を受ける'],
               [7, '[疲労:40]を受ける'],
              ],
             ]
    
    return tableName, tables
  end
  
  
  def getEnergyConsumptionResultTables()
    tableName = "気力消耗表"
    tables = [[
               [0, '消耗なし'],
               [1, '【因果力】を1点失う'],
               [2, '【因果力】を1点失う'],
               [3, '【因果力】を1点失う'],
               [4, '【因果力】を1点失う'],
               [5, '【因果力】を2点失う'],
               [6, '【因果力】を2点失う'],
               [7, '【因果力】を2点失う'],
              ],
              [
               [0, '消耗なし'],
               [1, '【因果力】を1点失う'],
               [2, '【因果力】を1点失う'],
               [3, '【因果力】を1点失う'],
               [4, '【因果力】を2点失う'],
               [5, '【因果力】を2点失う'],
               [6, '【因果力】を2点失う'],
               [7, '【因果力】を3点失う'],
              ],
             ]
    
    return tableName, tables
  end
  
  def getGoodsConsumptionResultTables()
    tableName = "物品消耗表"
    tables = [[
               [0, '消耗なし'],
               [1, '[消耗品]アイテムを1個失う'],
               [2, '[消耗品]アイテムを1個失う'],
               [3, '[消耗品]アイテムを1個失う'],
               [4, '[消耗品]アイテムを2個失う'],
               [5, '[消耗品]アイテムを2個失う'],
               [6, '[消耗品]アイテムを2個失う'],
               [7, '[消耗品]アイテムを2個失う'],
              ],
              [
               [0, '消耗なし'],
               [1, '[消耗品]アイテムを1個失う'],
               [2, '[消耗品]アイテムを1個失う'],
               [3, '[消耗品]アイテムを2個失う'],
               [4, '[消耗品]アイテムを2個失う'],
               [5, '[消耗品]アイテムを3個失う'],
               [6, '[消耗品]アイテムを3個失う'],
               [7, '[消耗品]アイテムを4個失う'],
              ],
             ]
    
    return tableName, tables
  end
  
  
  def getCashConsumptionResultTables()
    tableName = "金銭消耗表"
    tables = [[
               [0, '消耗なし'],
               [1, '所持金を10G失う'],
               [2, '所持金を15G失う'],
               [3, '所持金を20G失う'],
               [4, '所持金を25G失う'],
               [5, '所持金を30G失う'],
               [6, '所持金を35G失う'],
               [7, '所持金を40G失う'],
              ],
              [
               [0, '消耗なし'],
               [1, '所持金を25G失う'],
               [2, '所持金を35G失う'],
               [3, '所持金を50G失う'],
               [4, '所持金を60G失う'],
               [5, '所持金を75G失う'],
               [6, '所持金を90G失う'],
               [7, '所持金を100G失う'],
              ],
             ]
    
    return tableName, tables
  end
  
  
  def getExplosionSpecialConsumptionResultTables
    tableName = "特殊消耗表：ロデ研は爆発だ！"
    tables = [[
               [0, '……しかし特に何も起こらない！：効果なし。'],
               [1, 'キミの頭髪が爆発した！　見事なアフロヘアーだ：シナリオ終了まで［頭部］タグのついた装備不可。'],
               [2, '芸術は爆発である：所持しているアイテムがランダムに１つ、芸術品になり［換金］アイテム化する'],
               [3, '反応起爆装甲：防具スロットに装備しているアイテムがチョバムアーマーになる。次にあなたが【ＨＰ】ダメージを受けた時、そのダメージを無効化し、そのアイテムを失う。'],
               [4, '山羊スライムが爆発的に増殖する：［所持品］スロットを全て山羊スライム（［取引不可］、価格５０）で埋める。'],
               [5, 'キミのリアルが爆発する：コネクションを１つ、シナリオ終了時まで失う。'],
               [6, '工場が爆発する：［消耗品］タグを持つアイテムを購入することができなくなる。'],
               [7, 'ボスエネミーが爆発する：シナリオはクライマックスを迎えることなく終了する。お疲れ様でした。'],
             ]]
    return tableName, tables
  end
  
  
  def getCurseSpecialConsumptionResultTables
    tableName = "特殊消耗表：アルヴの呪いじゃ！"
    tables = [[
               [0, '「祝ってやる！」祝われる：あなたの【因果力】＋１。'],
               [1, '空腹の呪い：すぐさま食料アイテムひとつを食べる。空腹のせいでとてもおいしい！'],
               [2, '無職の呪い：サブ職が強制的に〈ニート〉に変更させられる。'],
               [3, '種族変更の呪い：ランダムでダイスを振って別の種族に変わる。種族特技が使用不能になる。'],
               [4, 'バリアフリーの呪い：［軽減］［障壁］状態になることができなくなる。'],
               [5, '集中力を乱す囁きの呪い：フォームが崩れて［構え］タグを持つ特技が使用不能になる。'],
               [6, '盲目の呪い：あなたの所持するコネクションのうちランダムに一つの関係が「熱愛」にかわる。'],
               [7, 'やる気が萎える呪い：あーもーまじやる気しねえ、何もやる気しねえ。【因果力】使用不可。'],
             ]]
    return tableName, tables
  end
  
  
  def getTableByRank(rank, tables)
	index = (rank - 1) / 5
    
	index = [0, index].max
	index = [index, (tables.size - 1)].min
    
    return tables[index]    
  end
  
  
  def getAdjustNumber(number, table)
    number = getAdjustNumberMin(number, table)
    number = getAdjustNumberMax(number, table)
    return number
  end
  
  #最少値の調整（値が小さすぎるなら表の最小値に）
  def getAdjustNumberMin(number, table)
    value = getTableMinimum(table)
    return [number, value].max
  end
  
  def getTableMinimum(table)
    table.first.first
  end
  
  
  #最大値の調整（値が大きすぎるなら表の最大値に）
  def getAdjustNumberMax(number, table)
    value = table.last.first
    return [number, value].min
  end
  
  
  
  #財宝表
  def getTresureDiceCommandResult(command)
    
    return nil unless(/(C|M|I|H|G)TRS(\d*)([\+\-\d]*)(\$)?/ === command)
    
  	type = $1
  	rank = $2.to_i
    is_choice = ($2.empty? || (not $4.nil?))
  	modifyText = $3
  	modify = getValue(modifyText, 0)
    is_prize = ($4 == "$")
    dice_value = nil
    dice_value = '7' if is_prize
    is_rank_enable = ( (not is_choice) || is_prize)
    
    
    tableName, table = 
      case type
      when "C"
        getCashTresureResultTable
      when "M"
        getMagicTresureResultTable
      when "I"
        getItemTresureResultTable
      when "H"
        getHeroineTresureResultTable
      when "G"
        getGoblinTresureResultTable
      else
        nil
      end
    
    return nil if table.nil?
  	
  	number, dice_str, = 
      if is_choice 
        [dice_value.to_i, dice_value] 
      else 
        roll(2, 6)
      end
    
  	number += (rank * (is_rank_enable ? 5 : 0)) + modify
    
    return command if is_choice and (number < getTableMinimum(table))
    
    number = [getAdjustNumberMin(number, table), 87].min
    
    result = 
      if type == "H"
        getHiroineTresureResultString(table, number)
      else
        getOtherTresureResultString(table, number)
      end
    
    return "#{tableName}(#{number}#{dice_str ? '[' + dice_str + ']' : ''})：#{result}"
  end
  
  
  def getHiroineTresureResultString(table, number)
    table_max_number = table.map {|e| e.first }.max
    
    result = 
      if number <= table_max_number
        get_table_by_number(number, table)
      else
        "※ #{table_max_number + 1}以降は未定義です ※"
      end
    
    return result
  end
  
  def getOtherTresureResultString(table, number)
    result = 
      case number
      when 63 .. 72
        get_table_by_number(number - 10, table) + '&80G'
      when 73 .. 82
        get_table_by_number(number - 20, table) + '&160G'
      when 83 .. 87
        get_table_by_number(number - 30, table) + '&260G'
      else
        get_table_by_number(number, table)
      end
    
    return result
  end
  
  
  def getCashTresureResultTable
    tableName = "金銭財宝表"
    table = [
             [ 7, '39G'],
             [ 8, '40G'],
             [ 9, '42G'],
             [10, '43G'],
             [11, '45G'],
             [12, '46G'],
             [13, '48G'],
             [14, '50G'],
             [15, '52G'],
             [16, '54G'],
             [17, '57G'],
             [18, '59G'],
             [19, '61G'],
             [20, '64G'],
             [21, '67G'],
             [22, '70G'],
             [23, '72G'],
             [24, '75G'],
             [25, '79G'],
             [26, '82G'],
             [27, '85G'],
             [28, '89G'],
             [29, '92G'],
             [30, '96G'],
             [31, '100G'],
             [32, '104G'],
             [33, '108G'],
             [34, '112G'],
             [35, '117G'],
             [36, '121G'],
             [37, '126G'],
             [38, '130G'],
             [39, '135G'],
             [40, '140G'],
             [41, '145G'],
             [42, '150G'],
             [43, '155G'],
             [44, '161G'],
             [45, '166G'],
             [46, '172G'],
             [47, '178G'],
             [48, '183G'],
             [49, '189G'],
             [50, '195G'],
             [51, '201G'],
             [52, '208G'],
             [53, '214G'],
             [54, '221G'],
             [55, '227G'],
             [56, '234G'],
             [57, '241G'],
             [58, '248G'],
             [59, '255G'],
             [60, '262G'],
             [61, '269G'],
             [62, '277G'],
            ]
    
    return tableName, table
  end
  
  
  def getMagicTresureResultTable
    tableName = "魔法素材財宝表"
    table = [
             [ 7, '魔触媒2[魔触媒2](20G)x2'],
             [ 8, '魔触媒2[魔触媒2](20G)x2'],
             [ 9, '魔触媒1[魔触媒1](15G)x3'],
             [10, '魔触媒1[魔触媒1](15G)x3'],
             [11, '魔触媒1[魔触媒1](15G)x3'],
             [12, '腐銀の小片[コア素材](30G)&鉱石のサンプル[換金](15G)'],
             [13, '新緑の若芽[コア素材](30G)&小さな花の種[換金](20G)'],
             [14, '命の葉[コア素材](40G)&強靭なツタ[換金](10G)'],
             [15, '鋭い牙[コア素材](40G)&使い込まれたナイフ[換金](10G)'],
             [16, '魔触媒3[魔触媒3](25G)x2'],
             [17, '古びた髑髏[コア素材](40G)&黒い詩集[換金](15G)'],
             [18, '黒睡蓮の花弁[コア素材](40G)&水キセル[換金](20G)'],
             [19, '純白の羽根[コア素材](40G)&小さなゴーグル[換金](20G)'],
             [20, '真紅の爪[コア素材](50G)&小さな鏡[換金](15G)'],
             [21, '赤熱の小爪[コア素材](50G)&細工物の暖炉[換金](20G)'],
             [22, '自戒の茨[コア素材](50G)&焦げた竜革[換金](20G)'],
             [23, '流星のかけら[コア素材](50G)&質素な指輪[換金](10G)x2'],
             [24, '聖なる繊維[コア素材](50G)&傷ついたメダル[換金](25G)'],
             [25, '折れたシャフト[コア素材](60G)&ガラクタの山[換金](5G)x4'],
             [26, '巨人の髭[コア素材](50G)&小さな櫛[換金](20G)'],
             [27, '精密な歯車[コア素材](60G)&工具鋼の破片[換金](25G)'],
             [28, 'とがった爪[コア素材](60G)&刺繍の飾り帯[換金](30G)'],
             [29, '触媒のフラスコ[コア素材](60G)&小さな肖像画[換金](30G)'],
             [30, '液化魔晶[コア素材](60G)&精密な人形[換金](35G)'],
             [31, '魔触媒5[魔触媒5](40G)&魔触媒4[魔触媒4](30G)x2'],
             [32, 'やわらかい石[コア素材](80G)&小型の蒸留器[換金](20G)'],
             [33, '謎めいた毛皮[コア素材](80G)&奇妙な頭骨[換金](30G)'],
             [34, '星屑の銀糸[コア素材](80G)&錫引きの星見盤[換金](30G)'],
             [35, '魔触媒5[魔触媒5](40G)x3'],
             [36, '小型錬成陣[コア素材](100G)&奇妙なオブジェ[換金](20G)'],
             [37, '魔触媒6[魔触媒6](50G)&魔触媒5[魔触媒5](40G)x2'],
             [38, '呪紋の種[コア素材](100G)&砕けた宝石[換金](30G)'],
             [39, '銀の円環[コア素材](100G)&純白のコサージュ[換金](30G)'],
             [40, '常眠りの種子[コア素材](100G)&庭師の飾り紐[換金](40G)'],
             [41, '飴色の粘液[コア素材](1210G)&極彩色の粒[換金](5G)x5'],
             [42, '魔触媒6[魔触媒6](50G)x3'],
             [43, '銀色の甲殻[コア素材](120G)&乏しいつぼみ[換金](10G)x4'],
             [44, '魔触媒7[魔触媒7](60G)&魔触媒6[魔触媒6](50G)x2'],
             [45, '大きな魔力結晶[コア素材](120G)&妖精のラクガキ[換金](40G)'],
             [46, '拳士の魄片[コア素材](140G)&白紙の巻物[換金](40G)'],
             [47, '魔触媒7[魔触媒7](60G)x3'],
             [48, '蒼い鉱石[コア素材](140G)&天然ガラスの塊[換金](25G)x2'],
             [49, '巨大な風切り羽[コア素材](140G)&分厚い卵殻[換金](50G)'],
             [50, '魔触媒8[魔触媒8](70G)x2&魔触媒7[魔触媒7](60G)'],
             [51, '絶えない火種[コア素材](180G)&漆黒のスス[換金](20G)'],
             [52, '魔触媒8[魔触媒8](70G)x3'],
             [53, '魔導錠[コア素材](180G)&つくりかけの錠前[換金](10G)x3'],
             [54, '七色の透明捻子[コア素材](180G)&開かない細工箱[換金](40G)'],
             [55, '偏属性魔法結晶[コア素材](220G)&レポートの束[換金](10G)'],
             [56, '魔触媒9[魔触媒9](90G)&魔触媒8[魔触媒8](70G)x2'],
             [57, '魔触媒9[魔触媒9](90G)&魔触媒8[魔触媒8](70G)x2'],
             [58, '派手な羽根飾り[コア素材](220G)&空想動物図鑑[換金](30G)'],
             [59, '砂のバラ[コア素材](220G)&棘のような水晶[換金](10G)x5'],
             [60, '魔触媒9[魔触媒9](90G)x3'],
             [61, '頑丈な胃袋[コア素材](220G)&奇妙な標本[換金](50G)'],
             [62, '魔触媒10[魔触媒10](110G)&魔触媒9[魔触媒9](90G)x2'],
            ]
    
    return tableName, table
  end
  
  def getItemTresureResultTable
    tableName = "換金アイテム財宝表"
    table = [
             [ 7, '陶器の絵付きマグカップ[換金](40G)'],
             [ 8, '木製の騎士像[換金](40G)'],
             [ 9, '小さな風景画[換金](50G)'],
             [10, '奇妙な抽象画[換金](50G)'],
             [11, '夜会の仮面[換金](50G)'],
             [12, '錫の食器セット[換金](50G)'],
             [13, '古い詩集[換金](50G)'],
             [14, '鮮やかな刺繍のハンカチ[換金](50G)'],
             [15, '陶器の大皿[換金](60G)'],
             [16, '絵巻物[換金](60G)'],
             [17, '陶器の水盤[換金](60G)'],
             [18, '細工物のイヤリング[換金](60G)'],
             [19, '淑女の肖像画[換金](70G)'],
             [20, '小さな宝石箱[換金](70G)'],
             [21, '真鍮の燭台[換金](70G)'],
             [22, '貴族の古い日記[換金](70G)'],
             [23, '騎士の肖像画[換金](80G)'],
             [24, '塗り下駄[換金](80G)'],
             [25, '精緻なゲーム盤[換金](80G)'],
             [26, '精緻な静物画[換金](90G)'],
             [27, '樫の椅子[換金](90G)'],
             [28, '古いビスクドール[換金](90G)'],
             [29, 'きらびやかな仮面[換金](100G)'],
             [30, 'ウサギのぬいぐるみ[換金](100G)'],
             [31, '真鍮の子鬼像[換金](100G)'],
             [32, '地方の歴史書[換金](110G)'],
             [33, '夜会の手袋[換金](110G)'],
             [34, 'ハイヒール[換金](120G)'],
             [35, 'おとぎ話の本[換金](120G)'],
             [36, '少女の肖像画[換金](130G)'],
             [37, '小さなコケシ[換金](130G)'],
             [38, '藤の椅子[換金](130G)'],
             [39, 'イヌとネコのパペット[換金](140G)'],
             [40, '掛け軸[換金](G140)'],
             [41, 'クマのぬいぐるみ[換金](150G)'],
             [42, 'ネコのかぶりもの[換金](150G)'],
             [43, '学術書[換金](160G)'],
             [44, 'タカの剥製[換金](170G)'],
             [45, '大理石の賢者像[換金](170G)'],
             [46, '刺繍をあしらったクッション[換金](180G)'],
             [47, 'イヌのかぶりもの[換金](180G)'],
             [48, '樫の大テーブル[換金](190G)'],
             [49, '彫金の指輪[換金](190G)'],
             [50, '花鳥画の掛け軸[換金](200G)'],
             [51, '最上質の毛布[換金](210G)'],
             [52, '上質の白粉[換金](210G)'],
             [53, '磁器の茶器[換金](220G)'],
             [54, '簡素なティアラ[換金](230G)'],
             [55, '彫金のイヤリング[換金](230G)'],
             [56, '豪華なネックレス[換金](240G)'],
             [57, '上質の香水[換金](250G)'],
             [58, '山水画の掛け軸[換金](250G)'],
             [59, '手の込んだドレス/礼服[換金](260G)'],
             [60, '陶器の絵皿[換金](270G)'],
             [61, 'キツネのぬいぐるみ[換金](270G)'],
             [62, '古い歴史書[換金](280G)'],
            ]
    
    return tableName, table
  end
  
  def getHeroineTresureResultTable
    tableName = "ヒロイン財宝表"
    table = [
             [ 7, '行き倒れのみすぼらしいやせっぽちの幼女'],
             [ 8, '何よりお金が大事な御団子頭のチャイナ娘'],
             [ 9, 'おネダり上手キャミソ肩だしセーター妖術師'],
             [10, '小さな背中で皆を護るカットジーンズ武闘家'],
             [11, 'イカ帽子をかぶったドジっ娘侵略者'],
             [12, '呆れるほどポジティブな自称名探偵'],
             [13, '肝心な所でドジ踏む猫毛ポニテ殴り施療神官'],
             [14, '卵かけご飯の好きな貧乳神祇官'],
             [15, '光物大好きガメツイビッグリボン二刀細剣士'],
             [16, 'オークから命からがら逃げてきた剣の乙女'],
             [17, 'あなたのことを盲目的に賛美する自称妹'],
             [18, 'アピールするのに認識されない神祇官'],
             [19, '明るくポジティブなピンクのリボンの少女'],
             [20, '虚乳の魔法が使えないコンプレックス魔女'],
             [21, '食欲に一切躊躇しないむっちり駄肉アイドル'],
             [22, '泣きホクロが魅惑の悪戯お姉さん盗剣士'],
             [23, '執着心の強い若作りで陽気な年増神話生物'],
             [24, '詩歌を愛する平安引きこもり姫'],
             [25, '病弱だが誇り高い没落貴族のお嬢様'],
             [26, '元気いっぱい！小柄な狼牙族の野生児少女'],
             [27, '借金のかたで段ボールハウスなリコピン'],
             [28, '帰国子女の巫女服風魔砲少女デース！'],
             [29, 'ついてくるだけは出来るゾンビ娘'],
             [30, '夢にひたむきな緑髪の超時空アイドル候補生'],
             [31, 'すぐ股間を蹴るギザギザ歯のヤンキー娘'],
             [32, '使い減りしない盾'],
             [33, 'FXで有り金を全部とかしたうつろな先輩'],
             [34, '二の腕ぷにぷにだが家計簿を付けられる魔王'],
             [35, 'その胸は豊満であった記憶喪失の女ニンジャ'],
             [36, 'よくお裾わけをくれるおさげ髪のパン屋の娘'],
             [37, '「汚いは褒め言葉」の目線つき女暗殺者'],
             [38, 'ボタンが弾けそうで涙目のギルド窓口看板娘'],
             [39, '何でもオカルトにしてパニックになる少女'],
             [40, '戦闘の度に大食いしてしまう悩める弓術少女'],
             [41, '些細なことですぐ絆されちゃう金髪少女'],
             [42, '一緒に帰るのが恥ずかしいピンク髪幼馴染'],
             [43, 'ぽんぽんがペインでトイレ常駐なエルフ少女'],
             [44, '見つめると赤面する前髪法儀族少女'],
             [45, 'すぐビビッてテンパる小動物系少女'],
             [46, '背が高く紳士でキザなヅカ系王子様騎士女'],
             [47, '竹を割ったような性格の筋肉ドワーフ女'],
             [48, 'いつもあなたを夢に見ているポニテ少女'],
             [49, '先陣先駆け夜討ち朝駆けお寝坊姉御武士'],
             [50, '何にでも首を突っ込む旅ガラスのロリババア'],
             [51, '事あるごとに踊る薄着南国褐色娘'],
             [52, '彼女はあなたの初恋の人に似ている']
            ]
    
    return tableName, table
  end
  
    def getGoblinTresureResultTable
    tableName = "ゴブリン財宝表"
    table = [
             [ 7, 'ライトメイス'],
             [ 8, '百科事典'],
             [ 9, '42G'],
             [10, '古びた髑髏[コア素材](40G)'],
             [11, '加速の巻物(初級)'],
             [12, '46G'],
             [13, '48G'],
             [14, '50G'],
             [15, 'ガラス玉[換金](60G)'],
             [16, '血塗られた刃[コア素材](50G)'],
             [17, '歪んだ金皿[換金](60G)'],
             [18, '59G'],
             [19, '毛皮の敷物[換金](60G)'],
             [20, 'とがった爪[コア素材](60G)'],
             [21, '67G'],
             [22, '傷だらけの象牙像[換金](70G)'],
             [23, '72G'],
             [24, 'ライトランス[破損]'],
             [25, '骨のネックレス[換金](80G)'],
             [26, '砂金混じりの石[換金](80G)'],
             [27, '85G'],
             [28, '香木の小片[換金](90G)'],
             [29, '奇妙なお面[換金](90G)'],
             [30, '96G'],
             [31, 'シミター'],
             [32, 'ウッデンラウンド'],
             [33, '風鳴りの鈴[コア素材](80G)&鉄の陣笠[コア素材](30G)'],
             [34, '112G'],
             [35, '山羊スライム(大)[換金](120G)'],
             [36, '121G'],
             [37, '高級桧材[換金](125G)'],
             [38, '130G'],
             [39, '水晶のチェス駒[換金](135G)'],
             [40, '140G'],
             [41, 'テント(キャンプ用)'],
             [42, '怪しい丸薬[コア素材](30G)×2&100G'],
             [43, '謎めいた毛皮[コア素材](80G)&怨念の鍔[コア素材](80G)'],
             [44, '儀式の骨剣[換金](160G)'],
             [45, '古ぼけたコイン[換金](165G)'],
             [46, '狼牙棒'],
             [47, '法理回路[コア素材](60G)&120G'],
             [48, '大きな魔力結晶[コア素材](120G)&60G'],
             [49, '189G'],
             [50, '上等な樽酒[換金](200G)'],
             [51, '201G'],
             [52, '白の指輪'],
             [53, 'ヒスイの首飾り[換金](210G)'],
             [54, '金のゴブリン像[換金](220G)'],
             [55, 'サーベル'],
             [56, '真鉄の刀身[コア素材](120G)&120G'],
             [57, '汚れた青磁の壺[換金](240G)'],
             [58, 'とんすとんの焼き串盛り合わせ×2'],
             [59, 'ゴブリン王の勲章[換金](255G)'],
             [60, '垣間見の巻物(中級)×2'],
             [61, '269G'],
             [62, '白狼の毛皮[換金](280G)'],
            ]
    
    return tableName, table
  end
  
  #パーソナリティタグ表
  def getPersonalityTagDiceCommandResult(command)
    
    return nil unless("PTAG" === command)
    
	tableName = "パーソナリティタグ表"
	table = [
	         '[おませさん]',
	         '[好奇心旺盛]',
	         '[寂しがりや]',
	         '[生真面目]',
	         '[食いしん坊]',
	         '[やんちゃ]または[おてんば]',
			 
	         '[お人よし]',
	         '[情熱家]',
	         '[世話好き]',
	         '[理知的]',
	         '[頑固者]',
	         '[兄貴肌]または[姉御肌]',
			 
	         '[義理堅い]',
	         '[気まぐれ]',
	         '[職人気質]',
	         '[熱血漢]',
	         '[努力家]',
	         '[男好き]または[女好き]',
			 
	         '[家庭的]',
	         '[負けず嫌い]',
	         '[純真]',
	         '[朴念仁]',
	         '[慈悲深い]',
	         '[マイペース]',
			 
	         '[楽天家]',
	         '[仲間思い]',
	         '[誇り高い]',
	         '[社交的]',
	         '[冷静沈着]',
	         '[ロマンチスト]',
			 
	         '[学者肌]',
	         '[内向的]',
	         '[苦労人]',
	         '[派手好き]',
	         '[勇猛果敢]',
	         '[ミステリアス]',
	        ]
	
	result, number = get_table_by_d66(table)
	
	text = "#{tableName}(#{number})：#{result}"
    return text
  end
  
  #交友表
  def getFriendlyChartDiceCommandResult(command)
    
    return nil unless("KOYU" === command)
    
    tableName = "交友表"
    table = [
	         "交友対象への庇護\nあなたは、交友対象を庇護したいと思っている。守ってあげられる強さがあなたにはある。",
             "交友対象への親愛\nあなたは、交友対象を好ましく思っている。その気持ちを彼に伝えているとは限らない。",
             "交友対象との義兄弟\nあなたは、交友対象と兄弟同然の間柄だ。もちろん、血は繋がっていないが、そんなことは些細なことだ。",
             "交友対象の英雄\nあなたは、交友対象から英雄視されている。それは例えあなたが否定しても変わらない。",
             "交友対象への尊敬\nあなたは、交友対象を尊敬している。彼の技術、心の強さ。それがなんであっても彼への敬意は変わらない。",
             "交友対象の相棒\nあなたは、交友対象を相棒だと思っている。彼なら自分と一緒に歩んでくれるだろう。",
             
             "交友対象への庇護\nあなたは、交友対象を庇護したいと思っている。守ってあげられる強さがあなたにはある。",
             "交友対象への親愛\nあなたは、交友対象を好ましく思っている。その気持ちを彼に伝えているとは限らない。",
             "交友対象との義兄弟\nあなたは、交友対象と兄弟同然の間柄だ。もちろん、血は繋がっていないが、そんなことは些細なことだ。",
             "交友対象の英雄\nあなたは、交友対象から英雄視されている。それは例えあなたが否定しても変わらない。",
             "交友対象への尊敬\nあなたは、交友対象を尊敬している。彼の技術、心の強さ。それがなんであっても彼への敬意は変わらない。",
             "交友対象の相棒\nあなたは、交友対象を相棒だと思っている。彼なら自分と一緒に歩んでくれるだろう。",
             
             "交友対象の恩\nあなたは交友対象に恩を受けた。今度は自分がその恩に報いる番だ。",
             "交友対象のライバル\nあなたは、交友対象をライバルだと思っている。それは一方的なものかもしれないし、切磋琢磨する間柄かもしれない。",
             "交友対象への興味\nあなたは、交友対象に対して興味を持っている。彼を見ているのが面白く、彼の行動を見届けてみたい。",
             "交友対象との友情\nあなたは、彼を友人だと思っている。それはどこに行っても変わらない確かなものだ。",
             "交友対象との同志\nあなたは、交友対象の同志である。同好の士であったり、同じ目的に向かう者だったりするだろう。",
             "交友対象への理解\nあなたは、交友対象を理解したいと思っている。彼はあなたと違う新しい視点を見せてくれる。",
             
             "交友対象の恩\nあなたは交友対象に恩を受けた。今度は自分がその恩に報いる番だ。",
             "交友対象のライバル\nあなたは、交友対象をライバルだと思っている。それは一方的なものかもしれないし、切磋琢磨する間柄かもしれない。",
             "交友対象への興味\nあなたは、交友対象に対して興味を持っている。彼を見ているのが面白く、彼の行動を見届けてみたい。",
             "交友対象との友情\nあなたは、彼を友人だと思っている。それはどこに行っても変わらない確かなものだ。",
             "交友対象との同志\nあなたは、交友対象の同志である。同好の士であったり、同じ目的に向かう者だったりするだろう。",
             "交友対象への理解\nあなたは、交友対象を理解したいと思っている。彼はあなたと違う新しい視点を見せてくれる。",
             
             "交友対象への尽力\nあなたは、交友対象に尽くしたいと思っている。それは彼の人柄かもしれないし、あなたの拘りかもしれない。",
             "交友対象との師弟\nあなたは、交友対象との師弟関係を結んでいる。どちらが師でも構わないがいろいろ教えられることがあるだろう。",
             "交友対象との雇用関係\nあなたは、交友対象と雇用関係にある。あなたと彼は仕事を通じて互いの力量を認め合う仲だ。",
             "交友対象の隣人\nあなたは交友対象の近隣に住んでいる。毎日挨拶を交わす程度かもしれないし、一緒に夕食を食べる仲かもしれない。",
             "交友対象との取引\nあなたは交友対象と商売をしている。互いに利のある取引ができる相手だ。",
             "交友対象の家族\nあなたは交友対象と一緒に暮らしている。同じ家に誰かがいると寂しくはないだろう。",
             
             "交友対象への尽力\nあなたは、交友対象に尽くしたいと思っている。それは彼の人柄かもしれないし、あなたの拘りかもしれない。",
             "交友対象との師弟\nあなたは、交友対象との師弟関係を結んでいる。どちらが師でも構わないがいろいろ教えられることがあるだろう。",
             "交友対象との雇用関係\nあなたは、交友対象と雇用関係にある。あなたと彼は仕事を通じて互いの力量を認め合う仲だ。",
             "交友対象の隣人\nあなたは交友対象の近隣に住んでいる。毎日挨拶を交わす程度かもしれないし、一緒に夕食を食べる仲かもしれない。",
             "交友対象との取引\nあなたは交友対象と商売をしている。互いに利のある取引ができる相手だ。",
             "交友対象の家族\nあなたは交友対象と一緒に暮らしている。同じ家に誰かがいると寂しくはないだろう。"
            ]
    
    result, number = get_table_by_d66(table)
    
    text = "#{tableName}([#{number}]) ＞ #{result}"
    return text
    
  end
  
  #プレフィックスドマジックアイテム表
  def getPrefixedMagickItemDiceCommandResult(command)
    
    return nil unless(/MGR([1-3])/ === command)
    
    rank = $1.to_i
    
    table_1 = [
               "接頭語：気合の　対応タグ：すべての武器\nアイテム効果：この武器の【攻撃力】に＋１する。",
               "接頭語：秘術の　対応タグ：[杖][魔石]\nアイテム効果：このアイテムの【魔力】を＋１する。",
               "接頭語：一撃の　対応タグ：[白兵攻撃]可能な武器\nアイテム効果：〔起動：ダメージロール〕この武器による[白兵攻撃]のダメージロールに＋７する。シナリオ１回使用可能。",
               "接頭語：狙撃の　対応タグ：[弓][投擲]\nアイテム効果：〔起動：行動〕この武器による[射撃攻撃]と同時に使用する。攻撃の射程を＋２Ｓｑする。シナリオ１回使用可能。",
               "接頭語：必殺の　対応タグ：すべての武器\nアイテム効果：〔起動：判定直後〕この武器による[武器攻撃]による[命中判定]のダイスに６の出目が１つ以上あれば、判定をクリティカルにする。シナリオ１回使用可能。",
               "接頭語：火炎の　対応タグ：すべての武器、楽器\nアイテム効果：アイテムに[火炎]タグを追加する。（この効果を選んだ時、タグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「冷気の」「電撃の」のように変更すること）",
               
               "接頭語：気合の　対応タグ：すべての武器\nアイテム効果：この武器の【攻撃力】に＋１する。",
               "接頭語：秘術の　対応タグ：[杖][魔石]\nアイテム効果：このアイテムの【魔力】を＋１する。",
               "接頭語：一撃の　対応タグ：[白兵攻撃]可能な武器\nアイテム効果：〔起動：ダメージロール〕この武器による[白兵攻撃]のダメージロールに＋７する。シナリオ１回使用可能。",
               "接頭語：狙撃の　対応タグ：[弓][投擲]\nアイテム効果：〔起動：行動〕この武器による[射撃攻撃]と同時に使用する。攻撃の射程を＋２Ｓｑする。シナリオ１回使用可能。",
               "接頭語：必殺の　対応タグ：すべての武器\nアイテム効果：〔起動：判定直後〕この武器による[武器攻撃]による[命中判定]のダイスに６の出目が１つ以上あれば、判定をクリティカルにする。シナリオ１回使用可能。",
               "接頭語：火炎の　対応タグ：すべての武器、楽器\nアイテム効果：アイテムに[火炎]タグを追加する。（この効果を選んだ時、タグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「冷気の」「電撃の」のように変更すること）",
               
               "接頭語：炎使いの　対応タグ：[杖][魔石][腕部]\nアイテム効果：〔起動：ダメージロール〕あなたが行う[火炎]タグを持つ攻撃のダメージロールに＋７する。シナリオ１回使用可能。（この効果を選んだ時、タグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「氷使いの」「雷使いの」のように変更すること）",
               "接頭語：鉄身の　対応タグ：[盾][重鎧][中鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近距離からの攻撃）：３]を得る。",
               "接頭語：矢除けの　対応タグ：[盾][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近以外からの攻撃）：３]を得る。",
               "接頭語：火除けの　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（火炎）：１０]を得る。（この効果を選んだ時、タグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「氷除けの」「雷除けの」のように変更すること）",
               "接頭語：根性の　対応タグ：[重鎧][頭部]\nアイテム効果：〔起動：本文〕あなたがBSを受けた直後に使用する。直前に受けたBSから１つ選んで解除する。シナリオ１回使用可能。",
               "接頭語：癒しの　対応タグ：[腕部]\nアイテム効果：あなたの【回復力】を＋２する。",
               
               "接頭語：炎使いの　対応タグ：[杖][魔石][腕部]\nアイテム効果：〔起動：ダメージロール〕あなたが行う[火炎]タグを持つ攻撃のダメージロールに＋７する。シナリオ１回使用可能。（この効果を選んだ時、タグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「氷使いの」「雷使いの」のように変更すること）",
               "接頭語：鉄身の　対応タグ：[盾][重鎧][中鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近距離からの攻撃）：３]を得る。",
               "接頭語：矢除けの　対応タグ：[盾][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近以外からの攻撃）：３]を得る。",
               "接頭語：火除けの　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（火炎）：１０]を得る。（この効果を選んだ時、タグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「氷除けの」「雷除けの」のように変更すること）",
               "接頭語：根性の　対応タグ：[重鎧][頭部]\nアイテム効果：〔起動：本文〕あなたがBSを受けた直後に使用する。直前に受けたBSから１つ選んで解除する。シナリオ１回使用可能。",
               "接頭語：癒しの　対応タグ：[腕部]\nアイテム効果：あなたの【回復力】を＋２する。",
               
               "接頭語：スナネズミの　対応タグ：[腕部][外套]\nアイテム効果：〔起動：クリンナップ〕あなたの【ヘイト】をー２する。シナリオ１回使用可能。",
               "接頭語：フクロウの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：インスタント〕あなたは[暗視]タグを得る。この効果はCSとして扱う。シナリオ１回使用可能。",
               "接頭語：ヤマイワナの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：インスタント〕あなたは[水棲]タグを得る。この効果はCSとして扱う。シナリオ１回使用可能。",
               "接頭語：目利きの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたがドロップ品ロールを行った直後に使用する。そのロールを振り直す。シナリオ１回使用可能。",
               "接頭語：宝探しの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたが財宝表ロールを行った直後に使用する。そのロールを振り直す。シナリオ１回使用可能。",
               "接頭語：早変わりの　対応タグ：[鞄]\nアイテム効果：〔起動：インスタント〕あなたは即座に《装備の変更》を行う。シーン１回使用可能。",
               
               "接頭語：スナネズミの　対応タグ：[腕部][外套]\nアイテム効果：〔起動：クリンナップ〕あなたの【ヘイト】をー２する。シナリオ１回使用可能。",
               "接頭語：フクロウの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：インスタント〕あなたは[暗視]タグを得る。この効果はCSとして扱う。シナリオ１回使用可能。",
               "接頭語：ヤマイワナの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：インスタント〕あなたは[水棲]タグを得る。この効果はCSとして扱う。シナリオ１回使用可能。",
               "接頭語：目利きの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたがドロップ品ロールを行った直後に使用する。そのロールを振り直す。シナリオ１回使用可能。",
               "接頭語：宝探しの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたが財宝表ロールを行った直後に使用する。そのロールを振り直す。シナリオ１回使用可能。",
               "接頭語：早変わりの　対応タグ：[鞄]\nアイテム効果：〔起動：インスタント〕あなたは即座に《装備の変更》を行う。シーン１回使用可能。"
              ]
    
    table_2 = [
               "接頭語：怒りの　対応タグ：[両手]武器\nアイテム効果：〔起動：ダメージロール〕この武器による[武器攻撃]のダメージロールに＋[あなたの【ヘイト】]する。シーン１回使用可能。",
               "接頭語：連撃の　対応タグ：[片手]武器\nアイテム効果：〔起動：判定直後〕この武器による[武器攻撃]の[命中判定]を振り直す。シーン１回使用可能。",
               "接頭語：鋭刃の　対応タグ：[剣][刀][槍]\nアイテム効果：この武器による[武器攻撃]のダメージロールに＋１Ｄする。",
               "接頭語：痛撃の　対応タグ：[槌斧][格闘][鞭][杖]\nアイテム効果：この武器による[武器攻撃]のダメージロールに＋１Ｄする。",
               "接頭語：魔弾の　対応タグ：[弓][投擲]\nアイテム効果：この武器による[武器攻撃]のダメージロールに＋１Ｄする。",
               "接頭語：理力の　対応タグ：すべての武器、[魔石][楽器]\nアイテム効果：あなたの[魔法攻撃][特殊攻撃]のダメージロールに＋１Ｄする。この効果は複数累積しない。",
               
               "接頭語：怒りの　対応タグ：[両手]武器\nアイテム効果：〔起動：ダメージロール〕この武器による[武器攻撃]のダメージロールに＋[あなたの【ヘイト】]する。シーン１回使用可能。",
               "接頭語：連撃の　対応タグ：[片手]武器\nアイテム効果：〔起動：判定直後〕この武器による[武器攻撃]の[命中判定]を振り直す。シーン１回使用可能。",
               "接頭語：鋭刃の　対応タグ：[剣][刀][槍]\nアイテム効果：この武器による[武器攻撃]のダメージロールに＋１Ｄする。",
               "接頭語：痛撃の　対応タグ：[槌斧][格闘][鞭][杖]\nアイテム効果：この武器による[武器攻撃]のダメージロールに＋１Ｄする。",
               "接頭語：魔弾の　対応タグ：[弓][投擲]\nアイテム効果：この武器による[武器攻撃]のダメージロールに＋１Ｄする。",
               "接頭語：理力の　対応タグ：すべての武器、[魔石][楽器]\nアイテム効果：あなたの[魔法攻撃][特殊攻撃]のダメージロールに＋１Ｄする。この効果は複数累積しない。",
               
               "接頭語：鬼殺しの　対応タグ：すべての武器\nアイテム効果：この武器による[人型]への[武器攻撃]のダメージロールに＋１Ｄする。（この効果を選んだ時、種族のタグを[自然][精霊][幻獣][不死][人造][人間]のいずれかに変更してもよい。その場合は接頭語も「精霊殺しの」「幻獣殺しの」のように変更すること）",
               "接頭語：堅守の　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：この防具の【物理防御力】に＋４する。",
               "接頭語：抗魔の　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：この防具の【魔法防御力】に＋４する。",
               "接頭語：防壁の　対応タグ：[盾][頭部]\nアイテム効果：あなたはシーン開始時に[障壁：１０]を得る。",
               "接頭語：忍耐の　対応タグ：[盾][頭部]\nアイテム効果：〔起動：本文〕あなたが強制的な移動を受けた時に使用する。その移動距離をー１Ｓｑする。",
               "接頭語：護法の　対応タグ：[腕部]\nアイテム効果：あなたが与える[障壁]の強度は＋５される。",
               
               "接頭語：鬼殺しの　対応タグ：すべての武器\nアイテム効果：この武器による[人型]への[武器攻撃]のダメージロールに＋１Ｄする。（この効果を選んだ時、種族のタグを[自然][精霊][幻獣][不死][人造][人間]のいずれかに変更してもよい。その場合は接頭語も「精霊殺しの」「幻獣殺しの」のように変更すること）",
               "接頭語：堅守の　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：この防具の【物理防御力】に＋４する。",
               "接頭語：抗魔の　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：この防具の【魔法防御力】に＋４する。",
               "接頭語：防壁の　対応タグ：[盾][頭部]\nアイテム効果：あなたはシーン開始時に[障壁：１０]を得る。",
               "接頭語：忍耐の　対応タグ：[盾][頭部]\nアイテム効果：〔起動：本文〕あなたが強制的な移動を受けた時に使用する。その移動距離をー１Ｓｑする。",
               "接頭語：護法の　対応タグ：[腕部]\nアイテム効果：あなたが与える[障壁]の強度は＋５される。",
               
               "接頭語：脈動の　対応タグ：[腕部]\nアイテム効果：あなたが与える[再生]の強度は＋３される。",
               "接頭語：疾走の　対応タグ：[脚部][外套]\nアイテム効果：〔起動：行動〕あなたが《ラン》《ダッシュ》を行う時に使用する。その移動距離に＋１Ｓｑする。シーン１回使用可能。",
               "接頭語：瞬速の　対応タグ：[脚部][外套]\nアイテム効果：このアイテムの[行動修正]に＋３する。",
               "接頭語：逆境の　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたが[戦闘不能]になった直後に使用できる。あなたは【因果力】１点を得る。シーン１回使用可能。",
               "接頭語：森渡りの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：あなたはシーン開始時に[軽減（[天然]プロップ、ギミックからのダメージ）：１５]を得る。（この効果を選んだ時、タグを[魔法][機械]のいずれかに変えてもよい。その場合は、接頭語も「魔渡りの」「罠渡りの」のように変更すること）",
               "接頭語：旅人の　対応タグ：[鞄]\nアイテム効果：このアイテムに[所持品スロット]４個を追加する。",
               
               "接頭語：脈動の　対応タグ：[腕部]\nアイテム効果：あなたが与える[再生]の強度は＋３される。",
               "接頭語：疾走の　対応タグ：[脚部][外套]\nアイテム効果：〔起動：行動〕あなたが《ラン》《ダッシュ》を行う時に使用する。その移動距離に＋１Ｓｑする。シーン１回使用可能。",
               "接頭語：瞬速の　対応タグ：[脚部][外套]\nアイテム効果：このアイテムの[行動修正]に＋３する。",
               "接頭語：逆境の　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたが[戦闘不能]になった直後に使用できる。あなたは【因果力】１点を得る。シーン１回使用可能。",
               "接頭語：森渡りの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：あなたはシーン開始時に[軽減（[天然]プロップ、ギミックからのダメージ）：１５]を得る。（この効果を選んだ時、タグを[魔法][機械]のいずれかに変えてもよい。その場合は、接頭語も「魔渡りの」「罠渡りの」のように変更すること）",
               "接頭語：旅人の　対応タグ：[鞄]\nアイテム効果：このアイテムに[所持品スロット]４個を追加する。"
              ]
    
    table_3 = [
               "接頭語：気迫の　対応タグ：すべての武器\nアイテム効果：この武器の【攻撃力】に＋３する。",
               "接頭語：神秘の　対応タグ：[杖][魔石]\nアイテム効果：このアイテムの【魔力】に＋３する。",
               "接頭語：遠当ての　対応タグ：[弓][投擲]\nアイテム効果：この武器の射程に＋１Ｓｑする。",
               "接頭語：吸血の　対応タグ：[白兵攻撃]可能な武器\nアイテム効果：この武器による[白兵攻撃]でダメージを与えた時、あなたの【HP】は５点回復する。",
               "接頭語：衝撃の　対応タグ：[片手]武器\nアイテム効果：この武器による《基本武器攻撃》でダメージを与えた時、攻撃の対象に[放心]を与える。",
               "接頭語：怒号の　対応タグ：[両手]武器\nアイテム効果：この武器による《基本武器攻撃》でダメージを与えた時、攻撃の対象に[萎縮]を与える。",
               
               "接頭語：気迫の　対応タグ：すべての武器\nアイテム効果：この武器の【攻撃力】に＋３する。",
               "接頭語：神秘の　対応タグ：[杖][魔石]\nアイテム効果：このアイテムの【魔力】に＋３する。",
               "接頭語：遠当ての　対応タグ：[弓][投擲]\nアイテム効果：この武器の射程に＋１Ｓｑする。",
               "接頭語：吸血の　対応タグ：[白兵攻撃]可能な武器\nアイテム効果：この武器による[白兵攻撃]でダメージを与えた時、あなたの【HP】は５点回復する。",
               "接頭語：衝撃の　対応タグ：[片手]武器\nアイテム効果：この武器による《基本武器攻撃》でダメージを与えた時、攻撃の対象に[放心]を与える。",
               "接頭語：怒号の　対応タグ：[両手]武器\nアイテム効果：この武器による《基本武器攻撃》でダメージを与えた時、攻撃の対象に[萎縮]を与える。",
               
               "接頭語：甲羅の　対応タグ：[盾][重鎧][中鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近距離からの攻撃）：１０]を得る。",
               "接頭語：矢弾きの　対応タグ：[盾][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近以外からの攻撃）：１０]を得る。",
               "接頭語：耐火の　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（火炎）：２５]を得る。（この効果を選んだ時、軽減するタグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「耐冷の」「耐電の」のように変更すること）",
               "接頭語：城砦の　対応タグ：[盾][頭部]\nアイテム効果：あなたはシーン開始時に【障壁：２０】を得る。",
               "接頭語：物見の　対応タグ：[頭部]\nアイテム効果：あなたが行う[偵察]タグを持つ行動、および《異常探知》の判定に＋１Ｄする。",
               "接頭語：快癒の　対応タグ：[腕部]\nアイテム効果：あなたの【回復力】に＋５する。",
               
               "接頭語：甲羅の　対応タグ：[盾][重鎧][中鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近距離からの攻撃）：１０]を得る。",
               "接頭語：矢弾きの　対応タグ：[盾][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（至近以外からの攻撃）：１０]を得る。",
               "接頭語：耐火の　対応タグ：[重鎧][中鎧][軽鎧]\nアイテム効果：あなたはシーン開始時に[軽減（火炎）：２５]を得る。（この効果を選んだ時、軽減するタグを[冷気][電撃][邪毒][光輝][精神]のいずれかに変えてもよい。その場合は接頭語も「耐冷の」「耐電の」のように変更すること）",
               "接頭語：城砦の　対応タグ：[盾][頭部]\nアイテム効果：あなたはシーン開始時に【障壁：２０】を得る。",
               "接頭語：物見の　対応タグ：[頭部]\nアイテム効果：あなたが行う[偵察]タグを持つ行動、および《異常探知》の判定に＋１Ｄする。",
               "接頭語：快癒の　対応タグ：[腕部]\nアイテム効果：あなたの【回復力】に＋５する。",
               
               "接頭語：罠外しの　対応タグ：[腕部]\nアイテム効果：〔起動：判定直前〕あなたが《プロップ解除》を行う時に使用する。その判定はクリティカルとなる。シーン１回使用可能。",
               "接頭語：不動の　対応タグ：[脚部][外套]\nアイテム効果：あなたは[阻止能力]を失わない。",
               "接頭語：影走りの　対応タグ：[脚部][外套]\nアイテム効果：あなたが[隠密状態]の時に《ラン》を行っても、[隠密状態]は解除されない。",
               "接頭語：深海の　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：あなたは[暗視][水棲]タグを得る。",
               "接頭語：金運の　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたが財宝表ロールまたはドロップ表ロールを行った直後に使用する。そのロールを振り直す。シーン１回使用可能。",
               "接頭語：罠避けの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：ダメージ適用直前〕あなたに適用される予定のプロップおよび[ギミック]によるダメージを無効にする。シナリオ１回使用可能。",
               
               "接頭語：罠外しの　対応タグ：[腕部]\nアイテム効果：〔起動：判定直前〕あなたが《プロップ解除》を行う時に使用する。その判定はクリティカルとなる。シーン１回使用可能。",
               "接頭語：不動の　対応タグ：[脚部][外套]\nアイテム効果：あなたは[阻止能力]を失わない。",
               "接頭語：影走りの　対応タグ：[脚部][外套]\nアイテム効果：あなたが[隠密状態]の時に《ラン》を行っても、[隠密状態]は解除されない。",
               "接頭語：深海の　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：あなたは[暗視][水棲]タグを得る。",
               "接頭語：金運の　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：本文〕あなたが財宝表ロールまたはドロップ表ロールを行った直後に使用する。そのロールを振り直す。シーン１回使用可能。",
               "接頭語：罠避けの　対応タグ：[補助装備][鞄][楽器]\nアイテム効果：〔起動：ダメージ適用直前〕あなたに適用される予定のプロップおよび[ギミック]によるダメージを無効にする。シナリオ１回使用可能。"
              ]
    
    tableName = "プレフィックスドアイテム効果表"
    table = nil
    
    case rank
    when 1
      tableName += "（マジックグレード１）"
      table = table_1
    when 2
      tableName += "（マジックグレード２）"
      table = table_2
    when 3
      tableName += "（マジックグレード３）"
      table = table_3
    end
    
    result, number = get_table_by_d66(table)
    
    text = "#{tableName}([#{number}]) ＞ #{result}"
    return text
    
  end
  
  #攻撃命中箇所ランダム決定表
  def getHitLocationDiceCommandResult(command)
    
    return nil unless("HLOC" === command)
    
    tableName = "攻撃命中箇所"
    table = [
	         '額',
	         '頬',
	         '鼻',
	         '顎',
	         '後頭部',
	         '首',
			 
	         '耳',
	         '目',
	         'こめかみ',
	         '腕',
	         '肘',
	         '手',
			 
	         '手の指',
	         '心臓',
	         '胃',
	         '肺',
	         '肋骨',
	         '肩',
			 
	         '背',
	         'わき腹',
	         '腰',
	         '下腹',
	         '太もも',
	         '喉',
			 
	         'ふくらはぎ',
	         'アキレス腱',
	         'かかと',
	         'すね',
	         '足の小指',
	         '膝',
			 
	         '社会的信用',
	         '人間関係',
	         '初恋の思い出',
	         '完璧なはずの予測',
	         '心',
	         '眼鏡',
	        ]
    result, number = get_table_by_d66(table)
    "#{tableName}(#{number})：#{result}"
  end
  
  
  #PC名ランダム決定表
  def getPCNameDiceCommandResult(command)
    
    return nil unless("PCNM" === command)
    
    tableName = "PC名"
    table = [
	         'Kuraudo',
	         'Sefirosu',
	         'Kirito',
	         'Asuna',
	         'Leeroy Jenkins',
	         'Buront',
			 
	         '水瀬陽夢',
	         '三宝寺吾郎',
	         '奈流麗夢',
	         'フランチャイズ竜崎',
	         '太宰治',
	         'ねざ',
			 
	         'クロウ・リー',
	         'ダィテス',
	         '達也',
	         '深雪',
	         'スレイ',
	         'タカぼんさん',
			 
	         '黒の錬金術士',
	         '†愛天使猫姫†',
	         'デス★ガン',
	         '卍漆黒の堕天使卍',
	         '光速の異名を持ち重力を自在に操る高貴なる騎士',
	         '新世界†英傑殺し',
			 
	         'ろぐほら',
	         'ああああ',
	         'そうこ',
	         'ぎんこう',
	         'あずかり',
	         'もょもと',
			 
	         'サスケ',
	         'ラファエロ',
	         'ドナテロ',
	         'ミケランジェロ',
	         '川内',
	         'フジキド',
            ]
    
    result, number = get_table_by_d66(table)
    
    return "#{tableName}(#{number})：#{result}"
  end
  
  
  #ロデ研の新発明ランダム決定表
  def getInventionAttributeTextDiceCommandResult(command)
    
    return nil unless(/IAT([ABMDLT]*)/ === command)
    
    tableName = "ロデ研の新発明"
    
    table_indicate_string = ($1 && $1 != '') ? $1 : 'MDLT'
    is_single = (table_indicate_string.length == 1)
    
    result = []
    number = []
    
    table_indicate_string.split(//).each do |char|
      dice_result, dice_str = roll(1, 6)
      number << dice_str
      result << case char
                when 'A', 'M'
                  [
                   '光って回って音が鳴る',
                   '何かに目覚める',
                   '硬くて強い',
                   'すごく速い',
                   '大量生産できる',
                   'よい手触り',
                  ].map {|e| (is_single ? '特徴A(メリット)：' : '') + e }
                when 'B', 'D'
                  [
                   '中毒性のある',
                   '凄まじく重い',
                   'ひどい臭いの',
                   '壊れやすい',
                   'マニュアルが超厚い',
                   '捨てても戻ってくる',
                  ].map {|e| (is_single ? '特徴B(デメリット)：' : '') + e }
                when 'L'
                  [
                   '美しい',
                   '素朴な',
                   '風流な',
                   '斬新な',
                   '名状しがたき',
                   '命を刈り取る形をしている',
                  ].map {|e| (is_single ? '見た目：' : '') + e }
                when 'T'
                  [
                   '武器',
                   '防具',
                   'アクセサリ',
                   '食料',
                   '薬品',
                   '乗り物',
                  ].map {|e| (is_single ? '発明品の種類：' : '') + e }
                end[dice_result - 1]
    end
    
    return "#{tableName}([#{number.join(',')}])：#{result.join(' ')}"
  end
  
  
  #アキバの街で遭遇するトラブルランダム決定表
  def getTroubleInAkibaStreetDiceCommandResult(command)
    
    return nil unless command === "TIAS"
    
    tableName = "アキバの街で遭遇するトラブル"
    
    number = []
    result = []
    
    [
     [
      '〈記録の地平線〉が',
      '〈三日月同盟〉が',
      '〈Ｄ．Ｄ．Ｄ〉が',
      '〈黒剣騎士団〉が',
      '〈西風の旅団〉が',
      '〈ロデリック商会〉が'
     ],
     [
      'ギルド会館で',
      'くいだおれ横丁で',
      '街の真ん中で',
      '水楓の館で',
      '公衆浴場で',
      '下水道で'
     ],
     [
      '理不尽な',
      'ささやかな',
      '甘い',
      '不自然な',
      '危険な',
      '頭の悪い'
     ],
     [
      '喧嘩',
      '恋愛沙汰',
      'いたずら',
      '陰謀',
      '事故',
      '落し物'
     ]
    ].each do |table|
      dice_result, dice_str = roll(1, 6)
      number << dice_str
      result << table[dice_result - 1]
    end
    
    return "#{tableName}([#{number.join(',')}])：#{result.join(' ')}"
  end
  
  
  #廃棄児ランダム決定表
  def getAbandonedChildDiceCommandResult(command)
    
    return nil unless command === "ABDC"
    
    tableName = "廃棄児"
    
    number = []
    result = []
    
    [
     [
      '花の名前',
      '星の名前',
      '色の名前',
      '石の名前',
      '動物の名前',
      '番号'
     ].map {|e| '名前：' + e },
     [
      '廃ビル',
      '道端',
      '居候',
      '木の上',
      '公園',
      '下水道'
     ].map {|e| '住居：' + e },
     [
      '探し物',
      '料理',
      '歌',
      '商売',
      '手先が器用',
      'あざといポーズ'
     ].map {|e| '特技：' + e },
     [
      '痩せている',
      'ちびっこ',
      '発育良好',
      '背が高い',
      'ぷにぷに',
      'ガチムチ'
     ].map {|e| '体型：' + e },
     [
      '果物',
      'お肉',
      'お野菜',
      'お魚',
      'お菓子',
      '虫'
     ].map {|e| '好きな食べ物：' + e },
     [
      'ぼく/わたし',
      'オイラ/アタシ',
      '俺/私',
      '拙者/わらわ',
      '自分の名前',
      'ミー'
     ].map {|e| '一人称：' + e }
    ].each do |table|
      dice_result, dice_str = roll(1, 6)
      number << dice_str
      result << table[dice_result - 1]
    end
    
    return "#{tableName}([#{number.join(',')}])：#{result.join('　')}"
  end
  
  
  #楽器種別表
  def getMusicalInstrumentTypeDiceCommandResult(command)
    return nil unless(/MII(\d?)/ === command)
     type, is_roll = if $1 && $1 != ''
      [$1.to_i, false]
    else
      roll(1, 6)
    end
    return nil if type < 1 || 6 < type 
    tableName = "楽器種別表"
    type_name = ['打楽器１', '鍵盤楽器', '弦楽器１', '弦楽器２', '管楽器１', '管楽器２'][type - 1]
    
    dice, = roll(1, 6)
    result = [
        ['カスタネット', 'マラカス', 'シンバル', 'トライアングル', '太鼓', 'ドラム'],
        ['木琴', '鉄琴', 'ハーモニウム', 'ハープシコード', 'ピアノ', 'クラヴィコード'],
        ['ハープ', 'リュート', 'ギター', 'バイオリン', 'チェロ', 'リラ'],
        ['琵琶', '和琴', '胡琴', '三味線', 'シタール', 'ダルシマー'],
        ['トランペット', 'ホルン', 'トロンボーン', 'チューバ', 'フルート', 'クラリネット'],
        ['リコーダー', 'オカリナ', 'オーボエ', 'ハーモニカ', 'アコーディオン', '尺八']
      ][type - 1][dice - 1]
    
    return "#{tableName}" + (is_roll ? "(#{type})" : '') + "：#{type_name}(#{dice})：#{result}"
  end
  
  def getEastalDiceCommandResult(command)
    
    return nil unless command =~ /ESTL(\d+)/
    
    cr = $1.to_i
    return nil unless (cr >= 1 && cr <= 10)
    
    tableName = "イースタル探索表"
    
    table = ["森のベリー摘み：あなたたちはベリーの茂みを見つける。探索をするＰＣは、難易度８の［知覚判定］を行うこと（ひとり１回だけ）。成功した人は「森のベリー（お好みサンドイッチ相当）」を１つ入手する。",
             "木漏れ日の散歩道：木漏れ日のさす明るい雑木林が続く。適度に人の手が入っていて、散策気分で歩くことができる。",
             "群生地にはご用心：あなたたちはトリフィドの群生地に踏み込んでしまった！　激しい戦いの末に辛くも勝利を掴んだあなたたち全員は［疲労：１０］をうける。",
             "フェアトレード：あなたたちは〈大地人〉の農業家と出会った。２０Ｇを支払うなら「季節の野菜ポトフ」を購入してよい（全部でＰＣと同じ数まで）。",
             "河の営み：河のほとりを土手に沿って歩く。小さな船着き場の方から威勢の良い声が聞こえる。魚を捕っているようだ。",
             "越すに越されぬ：川が増水しているせいであなたたちは渡るところを探すのに苦労する。［水棲］タグを所持、得られる手段のあるＰＣがひとりでもいるなら問題はない。いないのであれば大きく迂回して全員［疲労：１０］をうける。",
             "コボルド遭遇戦：あなたたちはコボルドの群れを蹴散らした！　全員１０Ｇを手に入れる。追いかけて殲滅をするなら全員［疲労：１０］をうけるが、さらに「小牙竜鬼の牙［換金］（１０Ｇ）」を１人１つ手に入れる。",
             "豊かな田園風景：大きな田んぼが何枚も広がっている。秋ならば黄金色の稲穂が風に揺れている事だろう。",
             "不運の予感：黒猫が目の前を横切り、カラスが頭上で鳴いて、靴ひもがぶつりと切れた。なんだか寒気まで。あなたたち全員は【因果力】を１点失う。",
             "友達の友達は友達：ＰＣ全員は２Ｄをふる。最大の出目だった「あなた」は最小の出目だった「対象」と共通の知り合いの話題で盛り上がる。あなたと対象は「因果力チケット」１枚で、それぞれから相手へのコネクションをとってよい。関係は「友情、理解］のどれかになる。",
             "時はうつろい：道沿いに、外壁だけが残った鉄筋のビルが建っている。今は鳥の住処になっているようだ。",
             "突然の豪雨！：あなたたちは突然の豪雨に見舞われ、苦労の末なんとか廃屋にたどり着いた。あなたたち全員は［食料］アイテムをひとつ消費すること。ただし［疲労］の回復量は半分となる。［食料］アイテムを消費できない場合は【因果力】１点を失う。",
             "野の花の咲き乱れる：あなたたちは一面の花畑にたどり着く。探索をするＰＣは、目標値９の［知識判定］を行うこと（ひとり１回だけ）。成功した人は「貴重な薬草［換金］（２０Ｇ）」をひとつ入手する。",
             "緑のトンネル：立派な広葉樹が立ち並び、緑の天蓋を作り出している。足元には腐葉土が厚く積もり、所々で木の根が顔を見せている。",
             "ゴブリン強襲部隊：あなたたちはゴブリン強襲部隊との遭遇戦に巻き込まれた。あなたたち全員は［疲労：２０］もしくは「シナリオｎ回」の特技の使用回数消費のどちらか（あなたたちが選択）をうける。",
             "情報交換：あなたたちは冒険者の集団と出会った。代表者は目標１０の［交渉判定］を行なうこと（適切なサブ職であれば＋２のボーナスを得ても良いだろう）。成功したら付近の情報を教えてもらうことができる。あなたたちのうち１人が次に行う［偵察］行動に＋２をえる。",
             "淵と漁師：滔々と水を湛えた淵に出た。漁師が投網を投げ入れる姿が見える。",
             "寸断された小道：がけ崩れで道が崩れ落ちてしまっている。このルートは使えないようだ。［飛行］状態である、得られる手段のあるＰＣがひとりでもいるなら周辺を探索できるので問題はない。そうでないならあなたたちは随分な遠回りを強いられた。あなたたち全員は［疲労：２５］を受ける。",
             "コボルドを蹴散らせ！：あなたたちはコボルドの巡回隊を蹴散らした。全員［疲労：（１Ｄ６＋５）］を受けてしまうが、戦利品として１人２０Ｇを手に入れる。",
             "大地の恵み：畝に沿って野菜が青々とした葉を茂らせている。おいしい料理になりそうだ。",
             "滑って転んで：街道を歩いていると突然巨大なワイルドボアが飛び出してくる。避けた拍子に転んで、あなたたち全員は［消耗品］アイテムを１つ失う。［消耗品］アイテムを持っていなければ、【因果力】１点を失う。",
             "ぐるぐるずてん：ＰＣ全員は２Ｄをふる。最小の出目だった「あなた」は濡れてすべる草に足を取られて転げ落ちてしまう。助けてあげる仲間は「因果力チケット」１枚で「あなた」に対してコネクションをとってよい。関係は「庇護、親愛］のどれかになる。",
             "つわものどもが夢の跡：半ば崩れた石垣が続く。亜人との激しい戦いの傷跡も今はかすかに残るばかりだ。",
             "五里霧中：深い霧がたちこめ、伸ばした手の先すら見えないありさまになる。あなたたち全員は［疲労：２５］もしくは【因果力】１点の減少のどちらか（あなたたちが選択）をうける。",
             "癒しの湧水：あなたたちはこんこんと湧きだす清水を見つける。目標値１３の［知覚判定］を行うこと。誰かひとりでも成功すれば、これが澄み切って魔力のある水だと判る。汲んでいくことはできないが飲めばその場で【因果力】１点を得る。",
             "針葉樹の森：針葉樹がごつごつとした樹皮を見せている。下生えは少なく、少し寒々しい印象を受ける。",
             "魚人の襲撃：あなたたちはサファギンの回遊小隊と激しい戦いを繰り広げた！　あなたたち全員は［疲労：２５］もしくは［消耗品］アイテム２個の喪失のどちらか（あなたたちが選択）をうける。",
             "助け合い：あなたたちは立ち往生している旅人の馬車と出会った。彼らを手助けする場合、助けたいメンバー全員で［操作判定］を行うこと。達成値の合計が（ＰＣ人数ｘ１０）以上なら、馬車は街道へと戻る。その場合１人２０Ｇの謝礼を受け取る。",
             "せせらぎとそよかぜ：ゆるやかに流れる小川のほとりに出た。川面を渡る風が心地よい",
             "ファイト！　一発！：あなたたちは断崖沿いの細い通路を進み、体力だけでなく気力の消耗も強いられた。あなたたち全員は［疲労：１５］を受ける。加えて［疲労：１５］もしくは【因果力】１点の減少のどちらか（あなたたちが選択）をうける。",
             "巨人と出会う：森の上にひょっこりと頭を出したのは禿頭の巨人だった。戦闘に勝利したあなたたちは全員２５Ｇを手に入れる。巨人のねぐらを見つけるには代表者が［解析判定］で目標値１２に成功しなければならない。成功した場合ねぐらから［魔触媒６］を１Ｄ６＋１個手に入れる。",
             "休憩する場所：休憩するのにぴったりの道路脇の空き地を見つける。かつて誰かもそう考えたのかたき火の跡もある。",
             "そんなはずじゃ：道に迷ってしまった。あなたたち全員は【因果力】を２点失う。【因果力】を失えない場合、足りない【因果力】１点につき［疲労：１５］をうける。あなたたちの仲間に［地図屋］か［斥候］がいれば［疲労：１５］は［疲労：１０］で済む。",
             "好きな子はいる？：休憩、どういったわけかあなたたちは好きな異性の話題へと突入してしまう。［愛情］もしくは［恋］［ときめき］に準じるコネクションを持っているＰＣはそれを告白してもよい。その場合ＧＭはそのＰＣの勇気に感じ入って【因果力】１を与えよう。もし告白の相手がいまパーティーにいる仲間であるならロールプレイ次第でその相手にも与える事。",
             "あの橋を渡って：赤く朽ちた鉄橋が川面に影を落としている。かつてはこの橋を電車が走っていたのかレールがコケの中に顔を見せている。",
             "氷のつぶて：大粒の雹が降り注ぎ、容赦なくあなたたちを打ち据える。あたりはひらけた土地で回避のしようもない。あなたたち全員は［疲労：３０］を受ける。",
             "ドキドキ洞窟：あなたたちは不気味な洞窟を見つける。探索をするＰＣは、目標１２の［知覚判定］を行うこと。失敗した人は［疲労：１０］をうける。１人でも成功した場合、洞窟の奥から１００Ｇはいった金貨の袋を発見する。山分けにしよう！",
             "茂みを抜けて：背の低い灌木の茂みが点在し、まっすぐに進むのが難しい。しかし踏み分け道があるおかげで迷わずに済みそうだ。",
             "ここで食い止めろ！：あなたたちは〈大地人〉集落の周辺でワイバーンとの戦闘に突入した！　あなたたち全員は［疲労：３０］もしくは【因果力】２点の減少のどちらか（あなたたちが選択）をうける。",
             "いつか来た道：あなたたちはまだ駆け出しの〈冒険者〉たちと出会った。何か手助けをしてあげたいなら、［消耗品］をいくつか渡してあげても良いし、何かアドバイスをしてあげても良い。彼らは何度も礼を述べつつ旅立つ。ＧＭはＰＣたちのロールプレイ次第では【因果力】１点を与えても良い。",
             "渓谷に響く水音：急峻な谷底を勢いよく水が流れる。そう遠くないところから滝の轟く音も聞こえてくる。",
             "毒の沼：あなたたちは腐臭漂う沼地を横切った。あなたたち全員は目標値１４の［運動判定］をおこなうこと。失敗したＰＣは［消耗品］アイテムを２個失う。",
             "ゴルゴンスレイヤー：あなたたちは鉄の肌を持つ牛を蹴散らした！　全員【因果力】１点をうしなう。戦利品として「鉄牛の鱗［換金］（３５Ｇ）」を人数分手に入れる。",
             "開拓者たち：何人かの大地人たちが森の開墾を進めている。種を撒けるようになるにはもう少しかかりそうだ。",
             "まさかの遭遇：１０メートルを超える緑のドラゴンとでくわす。なんでこんなところに！あなたたちは全力で逃げ出した。あなたたち全員は【因果力】を２点失うか、［補助装備］ひとつに［破損］タグをつける。どちらも出来ない場合、［疲労：３５］をうける。",
             "しりとりは鬼門：あなたたちは旅のいろどりのために全員でしりとりをしながら歩いている。ＰＣ全員は「ぬ」（ＧＭは変えても良い）で始まる単語をひとつを発表すること。一番恥ずかしい単語を発表したＰＣをみんなで決めよう。そのＰＣに対するコネクションをもっている他のＰＣは、コネクションの関係を［あわれみ］［がっかり］［面白い］に変更しても良い。",
             "古い神域：大きな石の鳥居が、長年の風雪に耐えてそびえ立つ。厳かな空気が辺りに満ちていた。",
             "タービュランス：突風は竜巻となった！　あなたたちはなんとかやり過ごすことができたが、無傷とはいかなかった。あなたたちは［疲労：３５］もしくは［消耗品］２個の喪失のどちらか（あなたたちが選択）をうける。",
             "狙うは大物：あなたたちは素晴らしい釣り場を見つける。探索をするＰＣは［食料］アイテムをひとつ消費して、目標値１３の［操作判定］を行うこと（漁師屋それに準じたサブ職には＋２を与えても良い）。成功した人は「脂の乗ったマス（定番カレー相当）を［１Ｄ／２］匹（最低１匹）入手する。",
             "古樹の迷宮：節くれだった古木が絡み合い、圧迫感を感じさせる。森がすごしてきた年月の重みが、肩にのしかかってくるようだ。",
             "多勢に無勢：あなたたちは大蛇の大群に囲まれた！　あなたたち全員は［疲労：４０］もしくは補助装備ひとつに［破損］タグ（あなたたちが選択）をうける。",
             "祝福の輪：あなたたちは大地人の村でささやかな結婚の宴席に出会う。祝福をしてみたい場合、代表するＰＣは難易度１４の［交渉判定］を行うこと。差し入れの［食料］タグを持つアイテムひとつごとに＋２のボーナスを得る。成功した場合、どこからか爽やかな風が吹きあなたたち全員は【因果力】１点を得る。そうでない場合にも宴会には招かれ、素朴なご馳走を食べて全員の［疲労］は－２０される。",
             "大河の一滴：清らかな水がこんこんと湧きだしている。この水はきっとあの大河に繋がっているのだろう。",
             "冷え切った山道：風が吹き付けて凍える山道をあなたたちは進んでいく。［軽減（冷気）］をもつ、あるいは得られるＰＣはこの影響を受けない。そうでないＰＣは【因果力】２点もしくは補助装備ひとつに［破損］タグ（あなたたちが選択）をうける。どちらも選択できない場合、［疲労：５０］をうける。",
             "ゴブリンの野営地：あなたたちはゴブリンの野営地を蹴散らした！　全員５０Ｇを手に入れる。目標値１４の［知覚判定］を行うこと（１人１回）。成功した人は「ゴブの英雄像［換金］（６０Ｇ）」を１つ入手する。",
             "連綿と続く営み：山の斜面一面に段々畑が広がる。これだけの田畑を拓くのに、いったいどれほどの時間がかかったのだろう。きっと近くには〈大地人〉の村があるはずだ。"]
    
    d1, dummy = roll(1, 6)
    d2, dummy = roll(1, 6)
    value = (d1.to_i + d2.to_i - 2 + (cr - 1) * 5)
    
    result = table[value]
    
    return "#{tableName}CR#{cr}(#{value + 7}[#{d1},#{d2}])\n#{result}"
  end
  
end

